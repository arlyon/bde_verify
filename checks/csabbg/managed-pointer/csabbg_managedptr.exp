csabbg_managedptr.t.cpp:28:22: warning: MP01: ManagedPtr without deleter will use 'operator delete'
    ManagedPtr<char> mp02(new (*pa) char);
                     ^    ~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:30:22: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char> mp04(new (*da) char);
                     ^         ~~~
csabbg_managedptr.t.cpp:18:27: note: MPOK2: Initialization is here
    bslma::Allocator     *da = bslma::Default::allocator();
                          ^
csabbg_managedptr.t.cpp:32:22: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char> mp06(new (*ba) char);
                     ^         ~~~
csabbg_managedptr.t.cpp:19:27: note: MPOK2: Initialization is here
    bslma::Allocator     *ba = Default::allocator();
                          ^
csabbg_managedptr.t.cpp:34:22: warning: MP01: ManagedPtr without deleter will use 'operator delete'
    ManagedPtr<char> mp08(new (ta) char);
                     ^    ~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:36:22: warning: MPOK3: ManagedPtr without deleter using default allocator directly
    ManagedPtr<char> mp10(new (*bslma::Default::allocator()) char);
                     ^         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:39:22: warning: MPOK3: ManagedPtr without deleter using default allocator directly
    ManagedPtr<char> mp12(new (*Default::allocator()) char);
                     ^         ~~~~~~~~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:42:22: warning: MPOK1: ManagedPtr without deleter using default-assigned allocator variable
    ManagedPtr<char> mp14(new (*aa) char);
                     ^         ~~~
csabbg_managedptr.t.cpp:24:5: note: MPOK1: Assignment is here
    aa = bslma::Default::allocator();
    ^
csabbg_managedptr.t.cpp:44:22: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char> mp16(new (*ba) char);
                     ^         ~~~
csabbg_managedptr.t.cpp:19:27: note: MPOK2: Initialization is here
    bslma::Allocator     *ba = Default::allocator();
                          ^
csabbg_managedptr.t.cpp:46:22: warning: MPOK1: ManagedPtr without deleter using default-assigned allocator variable
    ManagedPtr<char> mp18(new (*za) char);
                     ^         ~~~
csabbg_managedptr.t.cpp:25:5: note: MPOK1: Assignment is here
    za = Default::allocator();
    ^
csabbg_managedptr.t.cpp:50:5: warning: MP01: ManagedPtr without deleter will use 'operator delete'
    ManagedPtr<char>(new (*pa) char);
    ^                ~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:52:5: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char>(new (*da) char);
    ^                     ~~~
csabbg_managedptr.t.cpp:18:27: note: MPOK2: Initialization is here
    bslma::Allocator     *da = bslma::Default::allocator();
                          ^
csabbg_managedptr.t.cpp:54:5: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char>(new (*ba) char);
    ^                     ~~~
csabbg_managedptr.t.cpp:19:27: note: MPOK2: Initialization is here
    bslma::Allocator     *ba = Default::allocator();
                          ^
csabbg_managedptr.t.cpp:56:5: warning: MP01: ManagedPtr without deleter will use 'operator delete'
    ManagedPtr<char>(new (ta) char);
    ^                ~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:58:5: warning: MPOK3: ManagedPtr without deleter using default allocator directly
    ManagedPtr<char>(new (*bslma::Default::allocator()) char);
    ^                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:61:5: warning: MPOK3: ManagedPtr without deleter using default allocator directly
    ManagedPtr<char>(new (*Default::allocator()) char);
    ^                     ~~~~~~~~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:63:5: warning: MPOK1: ManagedPtr without deleter using default-assigned allocator variable
    ManagedPtr<char>(new (*aa) char);
    ^                     ~~~
csabbg_managedptr.t.cpp:24:5: note: MPOK1: Assignment is here
    aa = bslma::Default::allocator();
    ^
csabbg_managedptr.t.cpp:65:5: warning: MPOK2: ManagedPtr without deleter using default-initialized allocator variable
    ManagedPtr<char>(new (*ba) char);
    ^                     ~~~
csabbg_managedptr.t.cpp:19:27: note: MPOK2: Initialization is here
    bslma::Allocator     *ba = Default::allocator();
                          ^
csabbg_managedptr.t.cpp:67:5: warning: MPOK1: ManagedPtr without deleter using default-assigned allocator variable
    ManagedPtr<char>(new (*za) char);
    ^                     ~~~
csabbg_managedptr.t.cpp:25:5: note: MPOK1: Assignment is here
    za = Default::allocator();
    ^
csabbg_managedptr.t.cpp:70:22: warning: MP03: Deleter provided for non-placement allocation in MangedPtr construction
    ManagedPtr<char> ep01(new char, da);
                     ^    ~~~~~~~~  ~~
csabbg_managedptr.t.cpp:71:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep02(new (*ba) char, da);
                     ^          ~~        ~~
csabbg_managedptr.t.cpp:72:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep03(new (ta) char, ba);
                     ^         ~~        ~~
csabbg_managedptr.t.cpp:73:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep04(new (*da) char, &ta);
                     ^          ~~         ~~
csabbg_managedptr.t.cpp:74:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep05(new (*bslma::Default::allocator()) char, da);
                     ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~        ~~
csabbg_managedptr.t.cpp:75:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep06(new (*Default::allocator()) char, da);
                     ^          ~~~~~~~~~~~~~~~~~~~~        ~~
csabbg_managedptr.t.cpp:76:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep07(new (*da) char, Default::allocator());
                     ^          ~~        ~~~~~~~~~~~~~~~~~~~~
csabbg_managedptr.t.cpp:77:22: warning: MP02: Allocator and deleter differ in MangedPtr construction
    ManagedPtr<char> ep08(new (*da) char, bslma::Default::allocator());
                     ^          ~~        ~~~~~~~~~~~~~~~~~~~~~~~~~~~
26 warnings generated.
