h.cpp:8:8: warning: AT02: Class 'X' uses allocators but does not have an allocator trait
struct X {
       ^
h.cpp:8:8: warning: AC02: Class 'X' implicit copy constructor is not allocator-aware
h.cpp:11:8: warning: AT02: Class 'Y' uses allocators but does not have an allocator trait
struct Y : X {
       ^
h.cpp:12:23: warning: AP01: Class 'Y' has unnecessary d_allocator_p
    bslma::Allocator *d_allocator_p;
                      ^
h.cpp:11:12: note: AP01: Use allocator of base class 'X'
struct Y : X {
           ^
h.cpp:14:5: warning: AC01: Class 'Y' constructor has no allocator-aware version
    Y(int);
    ^
h.cpp:15:5: warning: AC01: Class 'Y' default constructor has no allocator-aware version
    Y(double d = 1.5, int a = 7);
    ^
h.cpp:11:8: warning: AC02: Class 'Y' implicit copy constructor is not allocator-aware
struct Y : X {
       ^
h.cpp:17:8: warning: AT02: Class 'Z' uses allocators but does not have an allocator trait
struct Z {
       ^
h.cpp:19:23: warning: AP01: Class 'Z' has unnecessary d_allocator_p
    bslma::Allocator *d_allocator_p;
                      ^
h.cpp:18:23: note: AP01: Use allocator of field 'x'
    X                 x;
                      ^
h.cpp:17:8: warning: AL01: Class 'Z' needs allocator() method
struct Z {
       ^
h.cpp:17:8: warning: AC02: Class 'Z' implicit copy constructor is not allocator-aware
h.cpp:22:8: warning: AT02: Class 'W' uses allocators but does not have an allocator trait
struct W {
       ^
h.cpp:22:8: warning: AP02: Class 'W' needs d_allocator_p member
h.cpp:22:8: warning: AL01: Class 'W' needs allocator() method
h.cpp:24:5: warning: AC01: Class 'W' default constructor has no allocator-aware version
    W();
    ^
h.cpp:25:5: warning: AC01: Class 'W' constructor has no allocator-aware version
    W(const char *) { }
    ^
h.cpp:22:8: warning: AC02: Class 'W' implicit copy constructor is not allocator-aware
struct W {
       ^
17 warnings generated.
